{
  "automation": {
    "decide": {
      "notes": "Post the command as a comment on any Issue/PR in this repo.",
      "scriptPath": "scripts/decisions-apply.mjs",
      "usage": [
        "/decide set /<json-pointer> <value>",
        "/decide remove /<json-pointer>",
        "/decide add-history / {\"date\":\"YYYY-MM-DD\",\"decision\":\"...\",\"why\":\"...\"}"
      ],
      "workflowPath": ".github/workflows/decide.yml"
    },
    "syncFromUrl": {
      "inputs": [
        "bundle_url: HTTPS URL to .zip or .patch",
        "sha256: expected SHA256 of file",
        "mode: zip|patch",
        "target_branch: default agent-sync"
      ],
      "runLink": "https://github.com/ComplianceLoop/complianceloop-site/actions/workflows/sync-from-url.yml",
      "workflowPath": ".github/workflows/sync-from-url.yml"
    }
  },
  "currentPhase": "Assignment engine",
  "fileActions": {
    "items": [
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=lib%2Fairtable.ts",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/lib/airtable.ts",
        "exists": true,
        "lastChecked": "2025-10-08",
        "path": "lib/airtable.ts",
        "purpose": "Airtable REST client (performUpsert)"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=app%2Fapi%2Fairtable%2Fsource%2Froute.ts",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/app/api/airtable/source/route.ts",
        "exists": true,
        "lastChecked": "2025-10-08",
        "path": "app/api/airtable/source/route.ts",
        "purpose": "JSON export for Airtable sync"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=scripts%2Fairtable-sync.mjs",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/scripts/airtable-sync.mjs",
        "exists": true,
        "lastChecked": "2025-10-08",
        "path": "scripts/airtable-sync.mjs",
        "purpose": "One-way sync CLI"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=.github%2Fworkflows%2Fairtable-sync.yml",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/.github/workflows/airtable-sync.yml",
        "exists": true,
        "lastChecked": "2025-10-08",
        "path": ".github/workflows/airtable-sync.yml",
        "purpose": "CI workflow for Airtable sync"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=apps%2Fportal%2Fapp%2Fapi%2Fproviders%2Fbootstrap%2Froute.ts",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/apps/portal/app/api/providers/bootstrap/route.ts",
        "exists": true,
        "lastChecked": "2025-10-08",
        "path": "apps/portal/app/api/providers/bootstrap/route.ts",
        "purpose": "Idempotent DDL: providers, provider_services, provider_zips + indexes"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=apps%2Fportal%2Fapp%2Fapi%2Fproviders%2Fapply%2Froute.ts",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/apps/portal/app/api/providers/apply/route.ts",
        "exists": true,
        "lastChecked": "2025-10-10",
        "path": "apps/portal/app/api/providers/apply/route.ts",
        "purpose": "Create provider; upsert services; insert ZIP coverage rows"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=apps%2Fportal%2Fdb%2Fbootstrap.sql",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/apps/portal/db/bootstrap.sql",
        "exists": true,
        "lastChecked": "2025-10-08",
        "path": "apps/portal/db/bootstrap.sql",
        "purpose": "DDL mirror of provider tables/indexes (idempotent)"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=.github%2Fworkflows%2Fdecide.yml",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/.github/workflows/decide.yml",
        "exists": false,
        "lastChecked": "2025-10-15",
        "path": ".github/workflows/decide.yml",
        "purpose": "Comment-driven updates to decisions.json via /decide"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=scripts%2Fdecisions-apply.mjs",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/scripts/decisions-apply.mjs",
        "exists": false,
        "lastChecked": "2025-10-15",
        "path": "scripts/decisions-apply.mjs",
        "purpose": "Helper that applies /decide ops (set/remove/add-history)"
      },
      {
        "create": "https://github.com/ComplianceLoop/complianceloop-site/new/main?filename=.github%2Fworkflows%2Fsync-from-url.yml",
        "edit": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/.github/workflows/sync-from-url.yml",
        "exists": false,
        "lastChecked": "2025-10-15",
        "path": ".github/workflows/sync-from-url.yml",
        "purpose": "Import a ZIP or patch from a URL and open a PR"
      }
    ],
    "policy": "Use EDIT links if file exists; otherwise use CREATE links."
  },
  "finances": {
    "currency": "USD",
    "lastUpdated": "2025-10-10",
    "oneTime": {
      "items": [
        {
          "amount": 175,
          "date": "2025-09-26",
          "label": "New laptop",
          "notes": "",
          "source": "user"
        },
        {
          "amount": 120,
          "date": "2025-08-23",
          "label": "Connecticut LLC filing fee",
          "notes": "",
          "source": "user"
        },
        {
          "amount": 100,
          "date": "2025-09-26",
          "label": "Chat GPT credits",
          "notes": "",
          "source": "user"
        }
      ],
      "total": 395
    },
    "subscriptions": {
      "annualOnlyTotal": 11.08,
      "arr": 1446.28,
      "items": [
        {
          "amount": 60,
          "billingInterval": "monthly",
          "label": "ChatGPT Business",
          "notes": "",
          "plan": "Business",
          "status": "active"
        },
        {
          "amount": 20,
          "billingInterval": "monthly",
          "label": "Vercel Pro Plan",
          "notes": "",
          "plan": "Pro",
          "status": "active"
        },
        {
          "amount": 0,
          "billingInterval": "monthly",
          "label": "GitHub Base Plan",
          "notes": "",
          "plan": "Free",
          "status": "active"
        },
        {
          "amount": 11.08,
          "billingInterval": "annual",
          "label": "Porkbun",
          "notes": "",
          "plan": "Domain",
          "status": "active"
        },
        {
          "amount": 0,
          "billingInterval": "monthly",
          "label": "Cal.com",
          "notes": "",
          "plan": "",
          "status": "not_set_up"
        },
        {
          "amount": 0,
          "billingInterval": "monthly",
          "label": "Make",
          "notes": "",
          "plan": "",
          "status": "active"
        },
        {
          "amount": 0,
          "billingInterval": "monthly",
          "label": "Stripe",
          "notes": "",
          "plan": "",
          "status": "not_set_up"
        },
        {
          "amount": 0,
          "billingInterval": "monthly",
          "label": "Airtable",
          "notes": "",
          "plan": "",
          "status": "active"
        },
        {
          "amount": 39.6,
          "billingInterval": "monthly",
          "label": "Google Workspace",
          "notes": "",
          "plan": "",
          "status": "active"
        }
      ],
      "monthlyTotal": 119.6
    }
  },
  "links": {
    "diagnoseDecisions": "https://github.com/ComplianceLoop/complianceloop-site/actions/workflows/diagnose-decisions-json.yml",
    "editDecideWorkflow": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/.github/workflows/decide.yml",
    "editDecisions": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/decisions.json",
    "editDecisionsApplyScript": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/scripts/decisions-apply.mjs",
    "editPlaybook": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/playbook.md",
    "editSyncFromUrlWorkflow": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/.github/workflows/sync-from-url.yml",
    "handoffAgentPrompt": "https://github.com/ComplianceLoop/complianceloop-site/blob/main/handoff/prompt.agent.md",
    "handoffPrompt": "https://github.com/ComplianceLoop/complianceloop-site/blob/main/handoff/prompt.md",
    "pulls": "https://github.com/ComplianceLoop/complianceloop-site/pulls",
    "runDecideWorkflow": "https://github.com/ComplianceLoop/complianceloop-site/actions/workflows/decide.yml",
    "runReconciler": "https://github.com/ComplianceLoop/complianceloop-site/actions/workflows/reconcile-decisions-and-playbook.yml",
    "runSyncFromUrl": "https://github.com/ComplianceLoop/complianceloop-site/actions/workflows/sync-from-url.yml",
    "vercelDeployments": "https://vercel.com/compliance-loop/complianceloop-portal/deployments",
    "vercelEnv": "https://vercel.com/compliance-loop/complianceloop-portal/settings/environment-variables"
  },
  "operationalNotes": {
    "agentInstructionStyle": [
      "FULL-FILE REPLACEMENTS ONLY for all files (no partial snippets).",
      "Put the Edit/Create link immediately above each file.",
      "Provide numbered click-by-click steps and a concise commit title after files.",
      "Include a Verify section with exact URLs/cURL and the expected statuses.",
      "Never edit inside the generated block in playbook.md; use the reset protocol if stale.",
      "ASCII-only JSON for decisions.json.",
      "No secrets in repo; refer to secret names only.",
      "Prefer '@/lib/*', '@/db/*', or stable relatives.",
      "Redeploy on Vercel with Use existing Build Cache unchecked when debugging."
    ],
    "airtableEnv": {
      "note": "Set in Vercel (routes) and GitHub Actions (workflow).\nNever commit secrets.",
      "vars": [
        "AIRTABLE_API_KEY",
        "AIRTABLE_BASE_ID",
        "AIRTABLE_SYNC_KEY? (for POST /api/airtable/sync)",
        "BASE_URL? (scripts)",
        "SYNC_SOURCE_URL?"
      ]
    },
    "apiTesting": {
      "baseUrlPolicy": "Prefer the Production alias for testing; preview URLs may be protected.",
      "hoppscotch": [
        "Set Interceptor to Proxy.",
        "POST /api/providers/score with empty JSON body => expect 400 invalid zip.",
        "POST /api/providers/score with zip 00000 and services EXIT_SIGN,E_LIGHT => expect 200 with empty eligible list.",
        "POST /api/providers/apply with a new provider for ZIP 11223; then POST /api/providers/score for that ZIP and those services => expect eligible count >= 1 sorted by status rank."
      ],
      "previewBypassHeader": "x-vercel-protection-bypass:",
      "productionBase": "https://complianceloop-portal.vercel.app"
    },
    "apiTestingNotes": "Append short lines to apiTestingResults after running checks, e.g., 'YYYY-MM-DD: score {} -> 400 invalid zip OK'",
    "apiTestingResults": [
      "2025-10-09: score {} -> 400",
      "2025-10-09: score 00000 EXIT_SIGN,E_LIGHT -> 200 count:0",
      "2025-10-09: apply TestCo -> 200 providerId present",
      "2025-10-09: score 11223 EXIT_SIGN,E_LIGHT -> 200 count:>=1",
      "2025-10-12 - broadcast ok: job_id=4a1fc20d-11d8-4006-8aeb-f5276830f26f, eligible_count=2.",
      "2025-10-12 - accept ok: job_id=23442e4a-842a-4a83-8b66-79d8f0625522, winner_provider_id=e3587419-076b-4381-b91d-23131b635e1f.",
      "2025-10-12 - decline ok: job_id=e1dc1b62-c177-4215-b6ab-2c11cc297458, provider_id=cf582d89-caeb-4655-913f-43d0ed0e03c7, state=declined.",
      "2025-10-12 - logs ok: admin/logs reflects broadcast_offers_created, offer_accepted, offer_declined."
    ],
    "jsonHygiene": {
      "diagnosticWorkflow": ".github/workflows/diagnose-decisions-json.yml",
      "howToRun": [
        "Open links.diagnoseDecisions, click 'Run workflow', set pos to the byte index from the failing job.",
        "Read the window around pos to localize offending characters, then submit a full-file fix."
      ],
      "rules": [
        "ASCII-only content (no smart quotes).",
        "No trailing commas before ']' or '}'.",
        "If a workflow reports a byte/line position, fix exactly there, then re-run validate-decisions.json."
      ]
    },
    "previewUrlPolicy": "Prefer Production alias https://complianceloop-portal.vercel.app; for protected previews use header X-Vercel-Protection-Bypass with secret stored out-of-band.",
    "reconcilerProcess": {
      "normalRun": {
        "commitTitle": "playbook: sync decisions",
        "steps": [
          "Open links.runReconciler and run it",
          "Open links.pulls and merge the PR it opens"
        ]
      },
      "resetRun": {
        "steps": [
          "Open links.editPlaybook and replace with '\\n', commit with 'playbook: reset generated block'",
          "Open links.runReconciler and run it",
          "Open links.pulls and merge the PR it opens"
        ],
        "when": "Only if prior runs report no changes or the block is stale."
      },
      "summary": "Run once after edits; use reset protocol if needed."
    }
  },
  "phaseCatalog": [
    {
      "key": "design_skin",
      "title": "Design Skin Kit"
    },
    {
      "key": "auth_db",
      "title": "Auth + DB base"
    },
    {
      "key": "files_r2",
      "title": "Files & Certificates (R2)"
    },
    {
      "key": "airtable_bridge",
      "title": "Airtable bridge (hybrid)"
    },
    {
      "key": "job_model",
      "title": "Job model + booking skeleton"
    },
    {
      "key": "eligibility",
      "title": "Provider directory & eligibility"
    },
    {
      "key": "assignment",
      "title": "Assignment engine"
    },
    {
      "key": "cust_dashboard",
      "title": "Customer dashboard"
    },
    {
      "key": "prov_dashboard",
      "title": "Provider dashboard"
    },
    {
      "key": "payments",
      "title": "Payments & invoices"
    },
    {
      "key": "notifications",
      "title": "Notifications (email/SMS)"
    },
    {
      "key": "admin_console",
      "title": "Admin console"
    },
    {
      "key": "polish_launch",
      "title": "Polish & launch"
    }
  ],
  "phaseProgress": {
    "Airtable bridge (hybrid)": {
      "tasks": [
        {
          "id": "client",
          "status": "implemented",
          "title": "lib/airtable.ts"
        },
        {
          "id": "source",
          "status": "implemented",
          "title": "GET /api/airtable/source"
        },
        {
          "id": "script",
          "status": "implemented",
          "title": "scripts/airtable-sync.mjs"
        },
        {
          "id": "workflow",
          "status": "implemented",
          "title": "GH Actions: airtable-sync.yml"
        },
        {
          "id": "trigger",
          "status": "implemented",
          "title": "POST /api/airtable/sync (optional)"
        },
        {
          "id": "verify",
          "status": "implemented",
          "title": "Run workflow dry-run + normal; confirm green"
        }
      ]
    },
    "Assignment engine": {
      "decisions": [
        {
          "key": "table_namespace",
          "notes": "Isolated from any legacy jobs table to avoid collisions.",
          "value": "assign_* (assign_jobs, assign_job_offers, assign_job_assignments, assign_logs)"
        },
        {
          "key": "broadcast_model",
          "notes": "Offers expire at now() + (hold_minutes * 1 minute).",
          "value": "soft-hold offers"
        }
      ],
      "status": "in_progress",
      "tasks": [
        {
          "name": "broadcast endpoint",
          "path": "apps/portal/app/api/assign/broadcast/route.ts",
          "status": "implemented"
        },
        {
          "name": "soft-hold semantics",
          "status": "implemented"
        },
        {
          "name": "first-accept wins (atomic)",
          "path": "apps/portal/app/api/assign/accept/route.ts",
          "status": "implemented"
        },
        {
          "name": "single-eligible auto-assign",
          "status": "implemented"
        },
        {
          "name": "decline endpoint",
          "path": "apps/portal/app/api/assign/decline/route.ts",
          "status": "implemented"
        },
        {
          "name": "minimal admin logs endpoint",
          "path": "apps/portal/app/api/assign/admin/logs/route.ts",
          "status": "implemented"
        },
        {
          "name": "bootstrap (DDL) inline",
          "path": "apps/portal/app/api/db/bootstrap/route.ts",
          "status": "implemented"
        },
        {
          "name": "safe rollbacks",
          "status": "documented"
        }
      ],
      "verifyNotes": [
        "POST /api/assign/broadcast with telehealth_consult + 00901 returns job_id and eligible_count >= 2 after seeding.",
        "POST /api/assign/accept twice: exactly one 200; the other 409 (winner echoed).",
        "POST /api/assign/decline returns 200 on unexpired offer.",
        "GET /api/assign/admin/logs?job_id= shows broadcast_offers_created, offer_accepted, offer_declined."
      ]
    },
    "Job model + booking skeleton": {
      "tasks": [
        {
          "id": "wizard",
          "status": "implemented",
          "title": "Booking wizard skeleton"
        },
        {
          "id": "job-draft",
          "status": "implemented",
          "title": "Create Job(draft) API"
        },
        {
          "id": "soft-hold",
          "status": "implemented",
          "title": "Soft-hold service"
        }
      ]
    },
    "Provider directory & eligibility": {
      "tasks": [
        {
          "id": "bootstrap",
          "status": "implemented",
          "title": "DB bootstrap creates providers, provider_services, provider_zips"
        },
        {
          "id": "apply",
          "status": "implemented",
          "title": "POST /api/providers/apply (upsert services + ZIP rows)"
        },
        {
          "id": "score",
          "status": "implemented",
          "title": "POST /api/providers/score (zip + services, sorted)"
        }
      ]
    }
  },
  "phases": [
    {
      "name": "Foundations",
      "status": "landed",
      "title": "Foundations"
    },
    {
      "name": "Auth & Session",
      "status": "landed",
      "title": "Auth & Session"
    },
    {
      "landedAt": "2025-10-10",
      "name": "Provider directory & eligibility",
      "status": "landed",
      "title": "Provider directory & eligibility"
    },
    {
      "name": "Assignment engine",
      "status": "in_progress",
      "title": "Assignment engine"
    },
    {
      "name": "Post-assignment ops",
      "status": "planned",
      "title": "Post-assignment ops"
    },
    {
      "name": "Billing",
      "status": "planned",
      "title": "Billing"
    },
    {
      "name": "Reporting",
      "status": "planned",
      "title": "Reporting"
    },
    {
      "name": "Audit & exports",
      "status": "planned",
      "title": "Audit & exports"
    },
    {
      "name": "Admin UX",
      "status": "planned",
      "title": "Admin UX"
    },
    {
      "name": "Notifications",
      "status": "planned",
      "title": "Notifications"
    },
    {
      "name": "Observability",
      "status": "planned",
      "title": "Observability"
    },
    {
      "name": "SRE & runbooks",
      "status": "planned",
      "title": "SRE & runbooks"
    },
    {
      "name": "Final hardening",
      "status": "planned",
      "title": "Final hardening"
    }
  ],
  "phasesDetailed": [
    {
      "acceptance": [
        "Preview renders",
        "Tokens adjustable with hot reload"
      ],
      "deliverables": [
        "theme.ts tokens",
        "globals.css",
        "Button/Input/Card",
        "/design-playground"
      ],
      "landedAt": "2025-09-27",
      "objective": "Theme tokens, brand, and UI primitives to speed all later pages.",
      "phase": "Design Skin Kit",
      "status": "landed"
    },
    {
      "acceptance": [
        "Vercel env DATABASE_URL set",
        "Auth code roundtrip works",
        "Dashboard gate honors session"
      ],
      "deliverables": [
        "/api/auth/send-code",
        "/api/auth/verify-code",
        "users, sessions tables"
      ],
      "landedAt": "2025-09-26",
      "objective": "Neon + Drizzle schema, passwordless email code, sessions.",
      "phase": "Auth + DB base",
      "status": "landed",
      "verification": [
        "DATABASE_URL set",
        "send-code 200",
        "verify-code 200 (session issued)"
      ]
    },
    {
      "acceptance": [
        "Upload returns 200 and r2Key",
        "Authorized GET streams 200; unauthorized 403"
      ],
      "deliverables": [
        "/api/files/upload",
        "/api/files/:key",
        "R2 bucket + IAM"
      ],
      "landedAt": "2025-09-29",
      "notes": [
        "Signer uses R2_ACCOUNT_ID (or R2_ENDPOINT override).",
        "POST /api/files/upload returns { r2Key, putUrl }.",
        "GET /api/files/[key] streams when authed; 403 when unauth."
      ],
      "objective": "Private file storage with signed streaming.",
      "phase": "Files & Certificates (R2)",
      "status": "landed"
    },
    {
      "acceptance": [
        "One-way sync green in CI",
        "Backfill job OK"
      ],
      "deliverables": [
        "lib/airtable.ts",
        "scripts/airtable-sync.mjs",
        ".github/workflows/airtable-sync.yml",
        "api/airtable/source",
        "optional: api/airtable/sync"
      ],
      "landedAt": "2025-10-03",
      "objective": "Mirror critical records for ops; Neon remains source of record.",
      "phase": "Airtable bridge (hybrid)",
      "status": "landed"
    },
    {
      "acceptance": [
        "30m hold for multi-property",
        "Single-property flow ok"
      ],
      "deliverables": [
        "/book wizard",
        "create Job(draft) API",
        "Soft-hold service"
      ],
      "landedAt": "2025-10-03",
      "notes": [
        "Stripe preauth flow verified (mock + live).",
        "Jobs endpoints in place and green."
      ],
      "objective": "Booking wizard + soft hold creation.",
      "phase": "Job model + booking skeleton",
      "status": "landed"
    },
    {
      "acceptance": [
        "Pass/fail immediate",
        "Declined path shows guidance",
        "Scoring endpoint returns eligible providers"
      ],
      "deliverables": [
        "criteria engine",
        "provider onboarding form",
        "how-to-qualify guidance",
        "provider scoring endpoint"
      ],
      "landedAt": "2025-10-10",
      "notes": [
        "Production verified: POST /api/providers/apply persists provider, zips, services.",
        "Production verified: POST /api/providers/score returns count>=1 for 11223 with EXIT_SIGN,E_LIGHT.",
        "Status rank: active > approved > pending; sort by company_name; limit 100."
      ],
      "objective": "Eligibility rules + instant decision.",
      "phase": "Provider directory & eligibility",
      "startedAt": "2025-10-04",
      "status": "landed"
    },
    {
      "acceptance": [
        "Race handled; winner locks; cascade on timeout/decline"
      ],
      "deliverables": [
        "offer broadcast",
        "accept endpoint",
        "cascade logic"
      ],
      "objective": "First-accept wins + 15m soft-hold + single-eligible auto-assign.",
      "phase": "Assignment engine",
      "startedAt": "2025-10-10",
      "status": "in_progress"
    },
    {
      "acceptance": [
        "Auth required",
        "Documents stream correctly"
      ],
      "deliverables": [
        "dashboard pages",
        "job detail route"
      ],
      "objective": "List past/upcoming jobs + files/invoices.",
      "phase": "Customer dashboard",
      "status": "planned"
    },
    {
      "acceptance": [
        "Late submission possible",
        "Conflict auto-cascade"
      ],
      "deliverables": [
        "checklist form",
        "conflict endpoint",
        "email routing field"
      ],
      "objective": "Job queue + day-of checklist + conflict report + tech email routing.",
      "phase": "Provider dashboard",
      "status": "planned"
    },
    {
      "acceptance": [
        "Invoices viewable; payments later (toggle)"
      ],
      "deliverables": [
        "invoice record",
        "link on job page"
      ],
      "objective": "Invoice links and settlement (minimal MVP).",
      "phase": "Payments & invoices",
      "status": "planned"
    },
    {
      "acceptance": [
        "Email on accept, conflict, ready-to-download"
      ],
      "deliverables": [
        "templates",
        "event triggers"
      ],
      "objective": "Resend email events; SMS optional later.",
      "phase": "Notifications (email/SMS)",
      "status": "planned"
    },
    {
      "acceptance": [
        "Admin-only gate",
        "Audit trail"
      ],
      "deliverables": [
        "admin routes",
        "impersonate (guarded)"
      ],
      "objective": "Search jobs/providers; manual override tools.",
      "phase": "Admin console",
      "status": "planned"
    },
    {
      "acceptance": [
        "Lighthouse >=90",
        "No PII leaks",
        "Runbook updated"
      ],
      "deliverables": [
        "schema.org Business markup",
        "robots, sitemaps",
        "basic rate limiting"
      ],
      "objective": "SEO, accessibility, rate limits, QA.",
      "phase": "Polish & launch",
      "status": "planned"
    }
  ],
  "project": "complianceloop-site",
  "providerIntake": {
    "decisions": [
      "Use @neondatabase/serverless inline in routes; avoid shared alias imports and any unsafe SQL.",
      "Idempotent DDL: CREATE TABLE IF NOT EXISTS, ON CONFLICT DO NOTHING for multi-row inserts."
    ],
    "endpoints": [
      {
        "method": "GET",
        "name": "Bootstrap",
        "path": "/api/providers/bootstrap"
      },
      {
        "method": "POST-via-form",
        "name": "Provider Apply (UI)",
        "path": "/providers/apply"
      },
      {
        "method": "POST",
        "name": "Provider Apply (API)",
        "path": "/api/providers/apply"
      },
      {
        "method": "POST",
        "name": "Provider Score (implemented)",
        "path": "/api/providers/score"
      }
    ],
    "schema": {
      "serviceCodes": [
        "EXIT_SIGN",
        "E_LIGHT",
        "EXTINGUISHERS"
      ],
      "tables": [
        {
          "columns": {
            "company_name": "text not null",
            "contact_email": "text not null",
            "contact_phone": "text",
            "id": "uuid primary key",
            "status": "text not null default 'pending'"
          },
          "name": "providers",
          "pk": [
            "id"
          ]
        },
        {
          "columns": {
            "provider_id": "uuid not null references providers(id) on delete cascade",
            "service_code": "text not null"
          },
          "indexes": [
            {
              "columns": [
                "service_code"
              ],
              "name": "idx_provider_services_service_code"
            }
          ],
          "name": "provider_services",
          "pk": [
            "provider_id",
            "service_code"
          ]
        },
        {
          "columns": {
            "provider_id": "uuid not null references providers(id) on delete cascade",
            "zip": "text not null check (zip ~ '^[0-9]{5}$')"
          },
          "indexes": [
            {
              "columns": [
                "zip"
              ],
              "name": "idx_provider_zips_zip"
            },
            {
              "columns": [
                "provider_id"
              ],
              "name": "idx_provider_zips_provider_id"
            }
          ],
          "name": "provider_zips",
          "pk": [
            "provider_id",
            "zip"
          ]
        }
      ]
    },
    "summary": "Provider intake + coverage captured and verified."
  },
  "repo": "ComplianceLoop/complianceloop-site",
  "status": {
    "lastReconciledAt": null,
    "playbookGeneratedAt": null
  },
  "version": "2025-10-15.1"
}
