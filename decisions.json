{
  "repo": {
    "org": "ComplianceLoop",
    "name": "complianceloop-site",
    "default_branch": "main",
    "github_urls": {
      "repo": "https://github.com/ComplianceLoop/complianceloop-site",
      "new_file_base": "https://github.com/ComplianceLoop/complianceloop-site/new/main",
      "edit_base": "https://github.com/ComplianceLoop/complianceloop-site/edit/main"
    }
  },
  "hosting": {
    "provider": "Vercel",
    "team": "compliance-loop",
    "marketing_project": "complianceloop-site",
    "portal_project": "complianceloop-portal",
    "dashboards": {
      "marketing": "https://vercel.com/compliance-loop/complianceloop-site",
      "portal": "https://vercel.com/compliance-loop/complianceloop-portal"
    },
    "domains": {
      "marketing": "https://www.complianceloop.com",
      "portal": "https://portal.complianceloop.com"
    },
    "preview_policy": {
      "strategy": "restrict-previews",
      "rules": [
        "Only authenticated staff can view preview deployments.",
        "Block public access to portal previews via middleware.",
        "Allowlist staff email domains: @complianceloop.com",
        "Optional: IP allowlist for previews."
      ]
    }
  },
  "data": {
    "system_of_record": "Neon Postgres",
    "back_office_ui": "Airtable (via sync from Postgres)",
    "storage": "Cloudflare R2 (private buckets; server-streamed)",
    "email": "Resend (email code sign-in)",
    "authn": {
      "method": "passwordless-email-code",
      "sessions": "short-lived sessions stored in Postgres",
      "portal_link": "stable URL per customer; secret rotatable"
    }
  },
  "apps": {
    "portal": {
      "framework": "Next.js",
      "root": "/apps/portal",
      "routes": [
        "/portal (start/login)",
        "/portal/:customer (stable entry)",
        "/portal/jobs (upcoming & past)",
        "/portal/jobs/:id (details: certificate, photos, invoice)",
        "/api/auth/* (send/verify codes)",
        "/api/files/* (secure R2 streaming)"
      ],
      "admin": {
        "routes": [
          "/admin/customers",
          "/admin/jobs",
          "/admin/jobs/:id",
          "/admin/uploads",
          "/admin/actions/rotate-portal-link",
          "/admin/actions/export-to-airtable"
        ]
      }
    }
  },
  "sync": {
    "airtable": {
      "direction": "one-way (Postgres â†’ Airtable) by default",
      "triggers": [
        "nightly schedule",
        "manual 'Export to Airtable' button in admin"
      ],
      "notes": "If two-way editing is later required, add webhook-driven upserts with conflict policy favoring Postgres."
    }
  },
  "automation": {
    "github_actions": {
      "smoke": ".github/workflows/agent-smoke.yml",
      "smoke_script": "scripts/agent-smoke.mjs",
      "additional": [
        ".github/workflows/portal-ci.yml (build/test/lint)",
        ".github/workflows/sync-airtable.yml (scheduled export)"
      ],
      "edit_links": {
        "smoke": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/.github/workflows/agent-smoke.yml",
        "smoke_script": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/scripts/agent-smoke.mjs",
        "portal_ci": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/.github/workflows/portal-ci.yml",
        "sync_airtable": "https://github.com/ComplianceLoop/complianceloop-site/edit/main/.github/workflows/sync-airtable.yml"
      }
    }
  },
  "operational_notes": {
    "dynamic": [
      "Preview deployment URLs change per PR; middleware must enforce allowlist at runtime.",
      "R2 bucket names and Neon connection strings differ per environment (dev/preview/prod). Resolve via Vercel env vars."
    ],
    "secrets_policy": "Never commit secrets. Use Vercel project env vars. Store only non-secret identifiers in this Playbook."
  },
  "agent_ops": {
    "intent": "Delegate stand-up and ongoing maintenance tasks to a GPT agent.",
    "allowed_tools": [
      "Vercel API",
      "GitHub Actions",
      "Neon (SQL)",
      "Airtable API",
      "Cloudflare R2 API",
      "Resend API"
    ],
    "safety": [
      "No data-destructive migrations without backup.",
      "Blue/green or canary when changing auth or file routes."
    ]
  },
  "owners": {
    "product": "ComplianceLoop",
    "tech": "CL Playbook GPT"
  }
}
