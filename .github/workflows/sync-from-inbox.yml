name: Sync from Inbox (manual)

on:
  workflow_dispatch:
    inputs:
      inbox_url:
        description: "PRESIGNED GET URL to inbox JSON (s3://complianceloop-agent-dropzone/inbox/agent-sync.json)"
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download inbox JSON
        id: fetch
        run: |
          set -euo pipefail
          curl -fsSL "${{ inputs.inbox_url }}" -o inbox.json
          echo "bundle_url=$(jq -r '.bundle_url' inbox.json)" >> $GITHUB_OUTPUT
          echo "sha256=$(jq -r '.sha256' inbox.json)" >> $GITHUB_OUTPUT
          echo "mode=$(jq -r '.mode' inbox.json)" >> $GITHUB_OUTPUT
          echo "target_branch=$(jq -r '.target_branch' inbox.json)" >> $GITHUB_OUTPUT
          echo "version=$(jq -r '.version' inbox.json)" >> $GITHUB_OUTPUT
          echo "note=$(jq -r '.note // empty' inbox.json)" >> $GITHUB_OUTPUT
          echo "ts=$(jq -r '.ts // empty' inbox.json)" >> $GITHUB_OUTPUT
          echo "Inbox parsed:"
          cat inbox.json

      - name: Download bundle
        run: |
          set -euo pipefail
          curl -fsSL "${{ steps.fetch.outputs.bundle_url }}" -o bundle.bin
          echo "${{ steps.fetch.outputs.sha256 }}  bundle.bin" | sha256sum -c -

      - name: Apply changes (zip or patch)
        run: |
          set -euo pipefail
          mode="${{ steps.fetch.outputs.mode }}"
          rm -rf __incoming && mkdir __incoming
          if [ "$mode" = "zip" ]; then
            unzip -q bundle.bin -d __incoming
            SRC="__incoming"
            count=$(find "__incoming" -mindepth 1 -maxdepth 1 | wc -l)
            if [ "$count" -eq 1 ] && [ -d "$(find "__incoming" -mindepth 1 -maxdepth 1 -type d)" ]; then
              SRC="$(find "__incoming" -mindepth 1 -maxdepth 1 -type d)"
            fi
            set +e
            rsync -a --delete --exclude='.git/' "$SRC"/ .
            code=$?; set -e
            if [ "$code" -ne 0 ] && [ "$code" -ne 24 ]; then
              echo "rsync failed with code $code"; exit "$code"
            fi
          else
            git apply --index bundle.bin
          fi

      - name: Commit
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -B "${{ steps.fetch.outputs.target_branch }}"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add -A
            git commit -m "chore(sync): import from inbox (${{ steps.fetch.outputs.version }})"
            git push -u origin "${{ steps.fetch.outputs.target_branch }}" --force
          else
            echo "No changes to commit."
          fi

      - name: Open/Update PR to main
        uses: peter-evans/create-pull-request@v6
        with:
          base: main
          branch: ${{ steps.fetch.outputs.target_branch }}
          title: "Agent Sync: ${{ steps.fetch.outputs.target_branch }} (${{ steps.fetch.outputs.version }})"
          body: |
            **Inbox:** ${{ inputs.inbox_url }}
            **Bundle:** ${{ steps.fetch.outputs.bundle_url }}
            **SHA256:** ${{ steps.fetch.outputs.sha256 }}
            **Mode:** ${{ steps.fetch.outputs.mode }}
            **Note:** ${{ steps.fetch.outputs.note }}
            **ts:** ${{ steps.fetch.outputs.ts }}
          commit-message: "chore(sync): import from inbox (${{ steps.fetch.outputs.version }})"
          delete-branch: false
