name: Decide (comment-driven)

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      command:
        description: 'Everything after "/decide ", e.g. set /version "2025-10-15.1"'
        required: true

permissions:
  contents: write
  issues: read

jobs:
  run:
    # For comments, only run if the body contains "/decide "
    if: github.event_name == 'workflow_dispatch' || contains(github.event.comment.body, '/decide ')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare BODY
        id: prep
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "BODY=/decide ${{ inputs.command }}" >> $GITHUB_ENV
          else
            printf "BODY=%s\n" "${{ github.event.comment.body }}" >> $GITHUB_ENV
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Parse command and export outputs (safe here-doc)
        id: parse
        shell: bash
        run: |
          node - <<'NODE'
          const fs = require('fs');

          const body = process.env.BODY || '';
          const m = body.match(/\/decide\s+([\s\S]*)/);
          if (!m) {
            console.error('No /decide command found in BODY');
            process.exit(1);
          }
          const tail = m[1].trim();

          // Split op + path + (rest as value, may contain spaces/JSON)
          const parts = tail.split(/\s+/);
          const op = parts.shift() || '';
          const path = parts.shift() || '';
          const value = tail.slice((op + ' ' + path).length).trim();

          if (!op || !path || !path.startsWith('/')) {
            console.error('Expected: /decide <op> </jsonPointer> <value?>');
            console.error('BODY was:', body);
            process.exit(1);
          }

          // Write to GITHUB_OUTPUT with a unique heredoc marker for value (safe for newlines)
          const outFile = process.env.GITHUB_OUTPUT;
          const marker = 'EOF_' + Math.random().toString(36).slice(2);
          const lines = [
            `op=${op}`,
            `path=${path}`,
            `value<<${marker}`,
            value,
            marker
          ].join('\n') + '\n';
          fs.writeFileSync(outFile, lines, { flag: 'a', encoding: 'utf8' });
          NODE

      - run: npm ci || npm i

      - name: Apply decision
        run: |
          node scripts/decisions-apply.mjs \
            --op "${{ steps.parse.outputs.op }}" \
            --path "${{ steps.parse.outputs.path }}" \
            --value "${{ steps.parse.outputs.value }}"

      - name: Commit
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add decisions.json
            git commit -m "chore(decision): ${{ steps.parse.outputs.op }} ${{ steps.parse.outputs.path }}"
            git push
          else
            echo "No changes"
          fi
