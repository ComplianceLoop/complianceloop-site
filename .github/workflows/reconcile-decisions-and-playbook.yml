name: reconcile-decisions-and-playbook

on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  reconcile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Generate Playbook block
        run: |
          set -euo pipefail
          node scripts/generate-playbook.mjs

      - name: Commit changes (if any)
        id: commit
        run: |
          set -euo pipefail
          git config user.name "CL Playbook"
          git config user.email "actions@users.noreply.github.com"

          BRANCH="reconcile/playbook"
          git checkout -B "$BRANCH"

          # Stage only if there is a diff
          if git diff --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          git add -A
          TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          git commit -m "playbook: regenerate from decisions.json (${TS})"
          git push -fu origin "$BRANCH"
          echo "changed=true" >> "$GITHUB_OUTPUT"
          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"

      - name: Open or update PR (if changed)
        if: steps.commit.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = core.getInput('branch') || process.env.BRANCH || '${{ steps.commit.outputs.branch }}';
            const owner = context.repo.owner;
            const repo  = context.repo.repo;

            // Look for existing open PR from this branch
            const { data: prs } = await github.rest.pulls.list({
              owner, repo, state: 'open', head: `${owner}:${branch}`, base: 'main'
            });

            let pr;
            if (prs.length > 0) {
              pr = prs[0];
              await github.rest.pulls.update({
                owner, repo, pull_number: pr.number,
                title: 'Playbook: reconcile from decisions.json',
                body: 'Automated regeneration of the CL block from decisions.json.'
              });
            } else {
              const { data } = await github.rest.pulls.create({
                owner, repo, base: 'main', head: branch,
                title: 'Playbook: reconcile from decisions.json',
                body: 'Automated regeneration of the CL block from decisions.json.'
              });
              pr = data;
            }

            core.setOutput('pr', pr.html_url);
            core.notice(`PR: ${pr.html_url}`);
