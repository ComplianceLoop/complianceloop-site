name: Agent Smoke

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # If you already have a custom smoke script, keep it; otherwise fall back to build.
      - name: Install
        run: npm ci || npm i

      - name: Typecheck (best-effort)
        run: npm run typecheck || true

      - name: Build
        run: |
          set -e
          if npm run | grep -q '^  agent:smoke'; then
            npm run agent:smoke
          else
            npm run build
          fi

      # ---------- feedback wiring ----------
      - name: Collect feedback payload (on failure)
        if: failure()
        run: |
          set -e
          mkdir -p feedback
          # last 400 lines of any npm logs if present
          (ls -1 npm-*.log 2>/dev/null || true) | tail -n +1 | while read f; do
            echo "----- $f (tail) -----" >> feedback/log-tail.txt
            tail -n 400 "$f" >> feedback/log-tail.txt || true
          done
          node -e "const fs=require('fs'); fs.writeFileSync('feedback/report.json', JSON.stringify({
            kind:'BUILD_FAILED',
            repo: process.env.GITHUB_REPOSITORY,
            pr: process.env.GITHUB_REF,
            sha: process.env.GITHUB_SHA,
            when: new Date().toISOString()
          }, null, 2))"

      - name: Upload feedback artifact (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: agent-feedback
          path: feedback/
          if-no-files-found: warn
          retention-days: 7

      - name: Post structured comment for agent (on failure)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = [
              '<!--AGENT_FEEDBACK-->',
              '### Agent Smoke failed',
              '',
              `**Repo:** ${context.repo.owner}/${context.repo.repo}`,
              `**PR:** #${pr.number}`,
              `**SHA:** ${context.sha}`,
              '',
              'Download the **agent-feedback** artifact for `report.json` and `log-tail.txt`.',
              '',
              '**Next step for agent:** Upload a fixed bundle and update the R2 inbox JSON with the new `bundle_url` and `sha256`. The scheduler will import automatically.'
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body
            });
