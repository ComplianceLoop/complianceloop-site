name: Agent Smoke

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NODE_ENV: ci
      FORCE_COLOR: "1"
      R2_PUBLIC_BASE: https://pub-defef221f7d146ada31deea5b1eb2b4f.r2.dev
      AGENT_FEEDBACK_TAG: "<!--AGENT_FEEDBACK-->"
      PREVIEW_URL: ${{ inputs.preview_url || github.head_ref && format('https://complianceloop-site-git-{0}-compliance-loop.vercel.app', github.head_ref) }}
      VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: |
          set -euo pipefail
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm i
          fi
      - name: Prepare output folder
        run: |
          mkdir -p out
          echo "{}" > out/report.json
          echo "# Smoke Report" > out/report.md
      - name: Run smoke (wrapper around your vercel smoke)
        id: smoke
        shell: bash
        run: |
          set -euo pipefail
          if [ -f scripts/agent-smoke.mjs ]; then
            set +e
            node scripts/agent-smoke.mjs --json out/report.json --md out/report.md --url "$PREVIEW_URL" 2>&1 | tee out/log.txt
            code=${PIPESTATUS[0]}
            set -e
          else
            echo "scripts/agent-smoke.mjs missing" | tee out/log.txt
            echo '{"status":"failed","error":"missing agent-smoke.mjs"}' > out/report.json
            printf "# Smoke Report\n\n**status:** failed\n" > out/report.md
            code=1
          fi
          # Redact long tokens
          sed -E -i 's/[A-Za-z0-9_\\-]{24,}/[REDACTED]/g' out/log.txt
          tail -n 80 out/log.txt > out/log_tail.txt
          if [ "$code" -eq 0 ]; then status="passed"; else status="failed"; fi
          echo "exit_code=$code" >> "$GITHUB_OUTPUT"
          echo "status=$status"   >> "$GITHUB_OUTPUT"
      - name: Upload feedback artifact (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: agent-feedback
          if-no-files-found: warn
          retention-days: 7
          path: |
            out/report.json
            out/report.md
            out/log.txt
            out/log_tail.txt
      - name: Build comment body
        if: always() && github.event_name == 'pull_request'
        id: body
        shell: bash
        run: |
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "RUN_URL=$RUN_URL" >> $GITHUB_OUTPUT
          echo "TAG=${AGENT_FEEDBACK_TAG}" >> $GITHUB_OUTPUT
          echo "STATUS=${{ steps.smoke.outputs.status || 'unknown' }}" >> $GITHUB_OUTPUT
          {
            echo "${AGENT_FEEDBACK_TAG}"
            echo "**Status:** \`${{ steps.smoke.outputs.status || 'unknown' }}\`"
            echo "**Run:** ${RUN_URL}"
            echo
            cat out/report.md || echo "# Smoke Report"
            echo
            echo "<details><summary>Last 80 lines of log</summary>"
            echo
            echo '```text'
            cat out/log_tail.txt || true
            echo '```'
            echo
            echo "</details>"
          } > comment.md
      - name: Create or update PR comment
        if: always() && github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: comment.md
          edit-mode: replace
      - name: Fail job if smoke failed
        if: ${{ steps.smoke.outputs.exit_code != '0' }}
        run: |
          echo "Smoke failed with exit code ${{ steps.smoke.outputs.exit_code }}"; exit 1
