name: Agent auto-fix (on failed Smoke)

on:
  workflow_run:
    workflows: ["Smoke"]
    types: [completed]

jobs:
  notify:
    if: github.event.workflow_run.conclusion == 'failure'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Call orchestrator webhook (if configured)
        if: vars.ORCHESTRATOR_WEBHOOK_URL != ''
        run: |
          payload=$(jq -n \
            --arg repo "${{ github.repository }}" \
            --arg run_id "${{ github.event.workflow_run.id }}" \
            --arg head_sha "${{ github.event.workflow_run.head_sha }}" \
            --arg branch "${{ github.event.workflow_run.head_branch }}" \
            --arg pr_number "${{ github.event.workflow_run.pull_requests[0].number }}" \
            --arg logs_url "${{ github.event.workflow_run.html_url }}" \
            --arg logs_raw_url "${{ github.event.workflow_run.logs_url }}" \
            '{repo:$repo, run_id:$run_id, head_sha:$head_sha, branch:$branch, pr_number:$pr_number, logs_url:$logs_url, logs_raw_url:$logs_raw_url}')
          curl -X POST -H "Content-Type: application/json" \
               -d "$payload" "${{ vars.ORCHESTRATOR_WEBHOOK_URL }}"

      - name: Fallback - open a triage issue (if no webhook)
        if: vars.ORCHESTRATOR_WEBHOOK_URL == ''
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Auto-fix requested: Smoke failed on ${context.payload.workflow_run.head_branch}`;
            const body = `Smoke failed on **${context.payload.workflow_run.head_branch}**.\n\nRun: ${context.payload.workflow_run.html_url}\n\nAdd label \`auto-fix\` to trigger the agent manually.`;
            await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body });
